#include <TridentTD_LineNotify.h> // ดาวน์โหลด Library ได้ที่ https://github.com/TridentTD/TridentTD_LineNotify
const int analogInPin = A0; // กำหนดขา input เซ็นเซอร์
int sensorValue = 0; // ตัวแปรค่า Analog
int outputValue = 0; // ตัวแปรสำหรับ Map เพื่อคิด %

#define SSID      "XXX" // ชื่อ Wi- Fi ที่ต้องการให้ ESP8266 เชื่อมต่อ
#define PASSWORD  "XXX" // รหัส Wi-Fi 
#define LINE_TOKEN  "XXX" //Token line ที่ขอมาจาก Line notify

void setup() {
  Serial.begin(115200);
  WiFi.begin(SSID, PASSWORD); // เชื่อมต่อ Wi-Fi
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  Serial.println(""); // เชื่อมต่อเสร็จหลุดออกจากลูป มาทำบรรทัดนี้ลงไป
  Serial.println("WiFi connected");
  LINE.setToken(LINE_TOKEN); // เชื่อมต่อกับ Token Line
}
void loop() {
  sensorValue = analogRead(analogInPin);
  outputValue = map(sensorValue, 0, 1023, 0, 100); //แปลงค่าจาก
  Serial.print(outputValue);
  Serial.println(" %");
  if (outputValue >= 40) { //ตั้งค่า % ที่ต้องการให้แจ้งเตือน 0-100
     LINE.notify("แจ้งเตือน : ตรวจพบควันเกินค่ากำหนด !!"); // ส่งข้อความไปยัง Line "แจ้งเตือน : ตรวจพบควันเกินค่ากำหนด"
  }
  else {
  }
  delay(500);
}
